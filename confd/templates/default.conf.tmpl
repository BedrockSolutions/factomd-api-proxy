{{- $corsAllowOrigin := getv "/corsAllowOrigin" "" -}}
{{- $factomdUrl := getv "/factomdUrl" -}}
{{- $healthCheckMaxBlockAge := getv "/healthCheck/maxBlockAgeInSeconds" -}}
{{- $healthCheckClockSpreadTolerance := getv "/healthCheck/clockSpreadToleranceInSeconds" -}}
{{- $keepAliveRequests := getv "/keepAliveRequests" -}}
{{- $keepAliveTimeout := getv "/keepAliveTimeout" -}}
{{- $listenPort := getv "/listenPort" "" -}}
{{- $sslBufferSize := getv "/ssl/bufferSize" -}}
{{- $sslCertificate := getv "/ssl/certificate" "" -}}
{{- $sslCiphers := getv "/ssl/ciphers" -}}
{{- $sslPrivateKey := getv "/ssl/privateKey" "" -}}
{{- $sslProtocols := getv "/ssl/protocols" -}}
{{- $sslSessionCacheSize := getv "/ssl/sessionCacheSize" -}}
{{- $sslSessionTimeout := getv "/ssl/sessionTimeout" -}}

{{- $sslEnabled := and (gt (len $sslCertificate) 0) (gt (len $sslPrivateKey) 0) -}}
{{- $defaultPort := or (and $sslEnabled 8443) 8080 -}}
{{- $port := or $listenPort $defaultPort -}}

# Prevents the request body from being written to a temp file
client_max_body_size 256k;
client_body_buffer_size 256k;

lua_package_path "$prefix/lua/?.lua;;";
lua_code_cache on;

# Forwarded header support
map $remote_addr $proxy_forwarded_elem {
  # IPv4 addresses can be sent as-is
  ~^[0-9.]+$ "for=$remote_addr";

  # IPv6 addresses need to be bracketed and quoted
  ~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]\"";

  # Unix domain socket names cannot be represented in RFC 7239 syntax
  default "for=unknown";
}

# Forwarded header support
map $http_forwarded $proxy_add_forwarded {
  # If the incoming Forwarded header is syntactically valid, append to it
  "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

  # Otherwise, replace it
  default "$proxy_forwarded_elem";
}

server {
  listen {{ $port }}{{ or (and $sslEnabled " ssl") "" }} default_server;
  server_name localhost;

{{ if $sslEnabled }}
  resolver 1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001];
  ssl_buffer_size {{ $sslBufferSize }};
  ssl_certificate /home/app/ssl/certificate.pem;
  ssl_certificate_key /home/app/ssl/private_key.pem;
  ssl_ciphers {{ $sslCiphers }};
  ssl_dhparam /home/app/ssl/dhparam.pem;
  ssl_prefer_server_ciphers on;
  ssl_protocols {{ $sslProtocols }};
  ssl_session_cache shared:TLS:{{ $sslSessionCacheSize }};
  ssl_session_tickets off;
  ssl_session_timeout {{ $sslSessionTimeout }};
  ssl_stapling on;
  ssl_stapling_verify on;
{{ end }}

  keepalive_requests {{ $keepAliveRequests }};
  keepalive_timeout {{ $keepAliveTimeout }};

  location / {
    rewrite_by_lua_block {
      local config = {
        allow_origin = '{{ $corsAllowOrigin }}',
        clock_spread_tolerance = tonumber({{ $healthCheckClockSpreadTolerance }}),
        max_block_age = tonumber({{ $healthCheckMaxBlockAge }}),
        ssl_enabled = {{ $sslEnabled }}
      }

      require("main").go(config)
    }
  }

  location = /factomd {
    internal;

    proxy_set_header Forwarded $proxy_add_forwarded;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_pass {{ $factomdUrl }}/v2;
  }
}
