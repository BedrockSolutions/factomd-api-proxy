{{- $allowOrigin := getv "/allow/origin" -}}
{{- $apiHostname := getv "/api/hostname" -}}
{{- $apiPort := getv "/api/port" -}}
{{- $port := getv "/port" -}}
server {
  listen {{ $port }} default_server;
  server_name localhost;

  location = / {
    if ($request_method = GET) {
      return 200;
    }

    return 400;
  }

  location = /v2 {
    rewrite_by_lua_block {
      local function finish_request(status, message, ...)
        ngx.status = status
        ngx.say(string.format(message, ...))
        ngx.exit(status)
      end

      local function finish_preflight(message, ...)
        finish_request(ngx.HTTP_OK, string.format('CORS Pre-flight: %s', message), ...)
      end

      local function is_wildcard_origin(allow_origin)
        return allow_origin == '*'
      end

      local function is_cors_disabled(allow_origin)
        return allow_origin == nil or allow_origin == ''
      end

      local function is_origin_allowed(allow_origin, origin)
        return is_wildcard_origin(allow_origin) or string.match(origin, allow_origin)
      end

      local function get_header(name)
        return ngx.req.get_headers()[name] or ''
      end

      local function set_common_cors_headers(allow_origin, origin)
        local is_wild = is_wildcard_origin(allow_origin)
        ngx.header['Access-Control-Allow-Origin'] = is_wild and '*' or origin
        ngx.header['Access-Control-Allow-Credentials'] = tostring(not is_wild)

        if not is_wild
        then
          ngx.header['Varies'] = 'Origin'
        end
      end

      local function handle_options(allow_origin, origin)
        if is_cors_disabled(allow_origin)
        then
          finish_preflight('No allowed origin configured')
        end

        if not is_origin_allowed(allow_origin, origin)
        then
          finish_preflight('Origin %q is not allowed', origin)
        end

        -- Get the requested method so that it can be validated
        local req_method = get_header('Access-Control-Request-Method')

        -- The only method that can be requested is POST
        if req_method ~= 'POST'
        then
          finish_preflight('The requested method %q is not allowed', req_method)
        end

        set_common_cors_headers(allow_origin, origin)
        ngx.header['Access-Control-Allow-Methods'] = 'POST'
        ngx.header['Access-Control-Allow-Headers'] = get_header('Access-Control-Request-Headers')

        finish_preflight('Origin %q is allowed', origin)
      end

      local function handle_post(allow_origin, origin)
        if not is_cors_disabled(allow_origin) and is_origin_allowed(allow_origin, origin)
        then
          set_common_cors_headers(allow_origin, origin)
        end
      end

      local allow_origin = '{{ $allowOrigin }}'
      local method = ngx.req.get_method()
      local origin = get_header('Origin')

      if method == 'OPTIONS'
      then
        handle_options(allow_origin, origin)
      elseif method == 'POST'
      then
        handle_post(allow_origin, origin)
      else
        finish_request(ngx.HTTP_BAD_REQUEST, 'The HTTP method %q is not allowed', method)
      end
    }

    proxy_pass http://{{ $apiHostname }}:{{ $apiPort }};
  }

  location / {
    return 400;
  }
}
