{{- $corsAllowOrigin := getv "/corsAllowOrigin" "" -}}
{{- $factomdUrl := getv "/factomdUrl" -}}
{{- $listenPort := getv "/listenPort" "" -}}
{{- $sslCertificate := getv "/sslCertificate" "" -}}
{{- $sslPrivateKey := getv "/sslPrivateKey" "" -}}

{{- $sslEnabled := and $sslCertificate $sslPrivateKey -}}
{{- $defaultPort := or (and $sslEnabled 8443) 8080 -}}
{{- $port := or $listenPort $defaultPort -}}

lua_package_path "$prefix/lua/?.lua;;";
lua_code_cache on;

# Forwarded header support
map $remote_addr $proxy_forwarded_elem {
  # IPv4 addresses can be sent as-is
  ~^[0-9.]+$ "for=$remote_addr";

  # IPv6 addresses need to be bracketed and quoted
  ~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]\"";

  # Unix domain socket names cannot be represented in RFC 7239 syntax
  default "for=unknown";
}

# Forwarded header support
map $http_forwarded $proxy_add_forwarded {
  # If the incoming Forwarded header is syntactically valid, append to it
  "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

  # Otherwise, replace it
  default "$proxy_forwarded_elem";
}

server {
  listen {{ $port }} {{ and $sslEnabled "ssl" }} default_server;
  server_name localhost;

{{ if $sslEnabled }}
  ssl_certificate /home/app/ssl/certificate.pem;
  ssl_certificate_key /home/app/ssl/private_key.pem;
{{ end }}

  # See https://blog.percy.io/tuning-nginx-behind-google-cloud-platform-http-s-load-balancer-305982ddb340
  keepalive_timeout 650;
  keepalive_requests 10000;

  location / {
    rewrite_by_lua_block {
      local config = {
        allow_origin = '{{ $corsAllowOrigin }}'
      }

      require("main").go(config)
    }

    proxy_set_header Forwarded $proxy_add_forwarded;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass {{ $factomdUrl }};
  }
}
